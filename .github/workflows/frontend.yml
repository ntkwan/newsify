name: Frontend Service CD

on:
  push:
    branches: [main, dev]
    paths:
      - 'frontend/**'
      - '.github/workflows/frontend.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup pnpm
        uses: pnpm/action-setup@v2
        with:
          version: 9

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'pnpm'
          cache-dependency-path: 'frontend/pnpm-lock.yaml'

      - name: Install dependencies
        working-directory: ./frontend
        run: pnpm install

      - name: Build application
        working-directory: ./frontend
        run: pnpm build

  build-and-push:
    needs: build
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set_output_vars.outputs.tag }}
      env: ${{ steps.set_output_vars.outputs.env }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Determine image tag
        id: determine_tag
        run: |
          # Get short commit SHA
          SHORT_SHA=$(git rev-parse --short HEAD)

          # Extract branch name from GITHUB_REF
          BRANCH_NAME=${GITHUB_REF#refs/heads/}

          # Determine the tag based on branch
          if [[ "$BRANCH_NAME" == "main" ]]; then
            echo "tag=latest-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "env=staging" >> $GITHUB_OUTPUT
          elif [[ "$BRANCH_NAME" == "dev" ]]; then
            echo "tag=dev-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "env=dev" >> $GITHUB_OUTPUT
          else
            # For any other branch, use branch name + commit SHA
            SAFE_BRANCH_NAME=$(echo $BRANCH_NAME | sed 's/\//-/g')
            echo "tag=${SAFE_BRANCH_NAME}-${SHORT_SHA}" >> $GITHUB_OUTPUT
            echo "env=${SAFE_BRANCH_NAME}" >> $GITHUB_OUTPUT
          fi

      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/newsify-frontend:${{ steps.determine_tag.outputs.tag }}
          build-args: |
            NEXT_PUBLIC_API_BASE_URL=${{ secrets.NEXT_PUBLIC_API_BASE_URL || 'http://dev.backend.id.vn/api' }}

      - name: Set output variables
        id: set_output_vars
        run: |
          echo "tag=${{ steps.determine_tag.outputs.tag }}" >> $GITHUB_OUTPUT
          echo "env=${{ steps.determine_tag.outputs.env }}" >> $GITHUB_OUTPUT

  update-infrastructure:
    needs: build-and-push
    uses: ./.github/workflows/infrastructure-update.yml
    with:
      service: frontend
      tag: ${{ needs.build-and-push.outputs.tag }}
      env: ${{ needs.build-and-push.outputs.env }}
      source_branch: ${{ github.ref_name }}
    secrets:
      ARGOCD_GITHUB_TOKEN: ${{ secrets.ARGOCD_GITHUB_TOKEN }}
